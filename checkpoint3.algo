/// 1 )

PROCEDURE dot_product(v1,v2 : ARRAY_OF INTEGER ; ps : INTEGER)
VAR
    i : INTEGER
BEGIN
    ps :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        ps := NaN; 
        Write("vectors with different sizes we cannot calculat dot product");

    END_IF

    FOR i FROM 0 TO v1.length-1 STEP 1  DO
        ps := ps + v1[i]*v2[i];
    END_FOR
END
// 2) 
ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [50];
    ps : INTEGER;
BEGIN
    // read the two vectors
    //determine if the two vectors are orthogonal
    dot_product(v1,v2,ps);
    IF (ps = 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END

// 3)

FUNCTION dot_product(v1,v2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i, ps : INTEGER;
BEGIN
    ps :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("vectors with different sizes we cannot calculat dot product");
        RETURN NaN; // NaN : not definte number
    END_IF
    FOR i FROM 0 TO v1.length-1 STEP 1  DO
        ps := ps + v1[i]*v2[i];
    END_FOR
    RETURN ps ;
END

ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [50];
    ps : INTEGER;
BEGIN
    
    ps := dot_product(v1,v2);
    IF (ps == 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END